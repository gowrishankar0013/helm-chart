apiVersion: v1
kind: ConfigMap
metadata:
  name: active-mq-xml
  labels:
    {{- include "activemqcontainer.labels" . | nindent 4 }}
data:
 activemq.xml: |
    <?xml version="1.0" encoding="UTF-8"?>

    <beans xmlns="http://www.springframework.org/schema/beans"
        xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"
        xsi:schemaLocation="http://www.springframework.org/schema/beans http://www.springframework.org/schema/beans/spring-beans.xsd
      http://activemq.apache.org/schema/core http://activemq.apache.org/schema/core/activemq-core.xsd">

        <!-- Allows us to use system properties as variables in this configuration 
            file -->
         <!-- Allows us to use system properties as variables in this configuration file -->
        <bean class="org.springframework.beans.factory.config.PropertyPlaceholderConfigurer">
            <property name="locations">
                <value>file:${activemq.conf}/credentials.properties</value>
            </property>
        </bean>

       <!-- Allows accessing the server log -->
        <bean id="logQuery" class="io.fabric8.insight.log.log4j.Log4jLogQuery"
              lazy-init="false" scope="singleton"
              init-method="start" destroy-method="stop">
        </bean>

        <!-- The <broker> element is used to configure the ActiveMQ broker. -->
        <broker xmlns="http://activemq.apache.org/schema/core"
            brokerName="${HOSTNAME}" dataDirectory="${activemq.data}" advisorySupport="true" useJmx="true">
            
            <networkConnectors>
            <networkConnector uri="k8s://default?podLabelKey=app&amp;podLabelValue=activemqcontainer"
            dynamicOnly="true"
            networkTTL="3"
            prefetchSize="1"
            conduitSubscriptions="false"
            decreaseNetworkConsumerPriority="true" />
            </networkConnectors>
            
            
            
            <destinationPolicy>
                <policyMap>
                    <policyEntries>
                        <policyEntry queue=">" enableAudit="false" />
                    </policyEntries>
                </policyMap>
            </destinationPolicy>


            <!-- The managementContext is used to configure how ActiveMQ is exposed 
                in JMX. By default, ActiveMQ uses the MBean server that is started by the 
                JVM. For more information, see: http://activemq.apache.org/jmx.html -->
            <managementContext>
                <managementContext createConnector="true" />
            </managementContext>

            <!-- Configure message persistence for the broker. The default persistence 
                mechanism is the KahaDB store (identified by the kahaDB tag). For more information, 
                see: http://activemq.apache.org/persistence.html -->
            <persistenceAdapter>
                <mKahaDB directory="${activemq.data}/kahadb">
                    <filteredPersistenceAdapters>
                        <filteredKahaDB queue="CalcJobStatusQueue">
                            <persistenceAdapter>
                                <kahaDB directory="${activemq.data}/CalcJobStatus-kahadb" />
                            </persistenceAdapter>
                        </filteredKahaDB>
                        <filteredKahaDB queue="success.>,failure.>">
                            <persistenceAdapter>
                                <kahaDB directory="${activemq.data}/large-message-kahadb" />
                            </persistenceAdapter>
                        </filteredKahaDB>
                        <filteredKahaDB>
                            <persistenceAdapter>
                                <kahaDB directory="${activemq.data}/default-kahadb" />
                            </persistenceAdapter>
                        </filteredKahaDB>
                    </filteredPersistenceAdapters>
                </mKahaDB>
            </persistenceAdapter>


            <!-- The systemUsage controls the maximum amount of space the broker will 
                use before disabling caching and/or slowing down producers. For more information, 
                see: http://activemq.apache.org/producer-flow-control.html -->
            <systemUsage>
                <systemUsage sendFailIfNoSpace="true">
                    <memoryUsage>
                        <memoryUsage percentOfJvmHeap="70" />
                    </memoryUsage>
                    <storeUsage>
                        <storeUsage limit="512 mb" />
                    </storeUsage>
                    <tempUsage>
                        <tempUsage limit="100 mb" />
                    </tempUsage>
                </systemUsage>
            </systemUsage>

            <!-- The transport connectors expose ActiveMQ over a given protocol to 
                clients and other brokers. For more information, see: http://activemq.apache.org/configuring-transports.html -->
            <transportConnectors>
                <!-- DOS protection, limit concurrent connections to 1000 and frame size to 100MB -->
                        <transportConnector name="openwire" uri="tcp://0.0.0.0:61616?maximumConnections=1000&amp;wireFormat.maxFrameSize=104857600&amp;wireFormat.maxInactivityDuration=300000&amp;keepAlive=true&amp;stackTraceEnabled=false&amp;cacheEnabled=false" />
            </transportConnectors>


            <!-- destroy the spring context on shutdown to stop jetty -->
            <shutdownHooks>
                <bean xmlns="http://www.springframework.org/schema/beans" class="org.apache.activemq.hooks.SpringContextHook" />
            </shutdownHooks>

        </broker>

        <!-- Enable web consoles, REST and Ajax APIs and demos The web consoles 
            requires by default login, you can disable this in the jetty.xml file Take 
            a look at ${ACTIVEMQ_HOME}/conf/jetty.xml for more details -->
        <import resource="jetty.xml" />

    </beans>