apiVersion: apps/v1
kind: StatefulSet
metadata:
  name: {{ include "activemqcontainer.fullname" . }}
  labels:
    {{- include "activemqcontainer.labels" . | nindent 4 }}
spec:
  serviceName: {{ .Values.serviceName }}
{{- if not .Values.autoscaling.enabled }}
  replicas: {{ .Values.replicaCount }}
{{- end }}
  selector:
    matchLabels:
      {{- include "activemqcontainer.selectorLabels" . | nindent 6 }}
  template:
    metadata:
    {{- with .Values.podAnnotations }}
      annotations:
        {{- toYaml . | nindent 8 }}
    {{- end }}
      labels:
        {{- include "activemqcontainer.selectorLabels" . | nindent 8 }}
    spec:
      imagePullSecrets: aps2secret
      serviceAccountName: {{ include "activemqcontainer.serviceAccountName" . }}
      securityContext:
        {{- toYaml .Values.podSecurityContext | nindent 8 }}
      containers:
        - name: {{ .Chart.Name }}
          env:
            {{- toYaml .Values.environment | nindent 12 }}
          image: "{{ .Values.image.repository }}:{{ .Values.image.tag | default .Chart.AppVersion }}"
          imagePullPolicy: {{ .Values.image.pullPolicy }}
          ports:
            - name: http
              containerPort: 61616
              protocol: TCP
          resources:
            {{- toYaml .Values.resources | nindent 12 }}
          volumeMounts:
          - mountPath: /opt/activemq/data
            subPath: data
            name: volume
            readOnly: false
          - mountPath: /opt/activemq/conf/activemq.xml
            name: config-xml
            subPath: activemq.xml
            readOnly: false
      volumes:
      - name: config-xml
        configMap:
            name: active-mq-xml
      - name: volume
      {{- with .Values.nodeSelector }}
      nodeSelector:
        {{- toYaml . | nindent 8 }}
      {{- end }}
      {{- with .Values.affinity }}
      affinity:
        {{- toYaml . | nindent 8 }}
      {{- end }}
      {{- with .Values.tolerations }}
      tolerations:
        {{- toYaml . | nindent 8 }}
      {{- end }}
  volumeClaimTemplates:      
  - metadata:
      name: volume
    spec:
      accessModes: ["ReadWriteOnce"]
      storageClassName: managed-premium
      resources:
       requests:
         storage: 1Gi
